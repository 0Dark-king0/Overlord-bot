const { SlashCommandBuilder, PermissionFlagsBits } = require("discord.js");
const { checkPermissions, createPermissionEmbed } = require("../utils/permissionCheck.cjs");

module.exports = {
  data: new SlashCommandBuilder()
    .setName("ุชุดุบูู")
    .setDescription("ูุญุต ุฃุฐููุงุช ุงูุจูุช ูุชุดุบูู ุงููุธุงู")
    .setDefaultMemberPermissions(PermissionFlagsBits.Administrator),

  async execute(interaction) {
    await interaction.deferReply();

    const statusEmbed = {
      color: 0x36393f,
      title: "โ๏ธ ูุญุต ุงูุฃุฐููุงุช",
      description: "ูุชู ูุญุต ุงูุฃุฐููุงุช ุงููุทููุจุฉ...",
      footer: { text: "Overlord - ุงููุธุงู ููู ุงูุฌููุน" },
      timestamp: new Date(),
    };

    await interaction.editReply({ embeds: [statusEmbed] });

    // ุชุฃุฎูุฑ ููุญุงูุงุฉ ุนูููุฉ ุงููุญุต
    await new Promise((resolve) => setTimeout(resolve, 1500));

    const permissionStatus = checkPermissions(interaction.guild);
    const permissionEmbed = createPermissionEmbed(permissionStatus);

    await interaction.editReply({ embeds: [permissionEmbed] });

    // ุฅูุดุงุก ููุงุฉ ุงูููุฌุงุช ุฅู ูู ุชูู ููุฌูุฏุฉ
    const config = require("../config.json");
    let logChannel = interaction.guild.channels.cache.find(
      (ch) => ch.name === config.logChannel
    );

    if (!logChannel && permissionStatus.allGranted) {
      try {
        logChannel = await interaction.guild.channels.create({
          name: config.logChannel,
          type: 0,
          topic: "ุณุฌูุงุช ูุธุงู Overlord - ุฌููุน ุงูุฅุฌุฑุงุกุงุช ุชูุณุฌู ููุง",
        });

        const welcomeEmbed = {
          color: 0x2d5f2d,
          title: "๐น ูุธุงู Overlord",
          description:
            "ุชู ุชุดุบูู ุงููุธุงู ุจูุฌุงุญ.\nูุฐู ุงูููุงุฉ ูุฎุตุตุฉ ูุชุณุฌูู ุฌููุน ุฅุฌุฑุงุกุงุช ุงูุฅุฏุงุฑุฉ ูุงููุฑุงูุจุฉ.",
          fields: [
            {
              name: "ุงููุฑุงูุจุฉ",
              value: "โ ูุฑุงูุจุฉ ุงููููุงุช ุงููุณูุฆุฉ ูุดุทุฉ",
            },
            {
              name: "ุงูุชุญุฐูุฑุงุช",
              value: "โ ูุธุงู ุงูุชุญุฐูุฑุงุช ุงูุชููุงุฆู ูุดุท",
            },
            {
              name: "ุงูุฃูุงูุฑ",
              value: "โ ุฌููุน ุงูุฃูุงูุฑ ุงูุฅุฏุงุฑูุฉ ุฌุงูุฒุฉ",
            },
          ],
          footer: { text: "Overlord - ุงููุธุงู ููู ุงูุฌููุน" },
          timestamp: new Date(),
        };

        await logChannel.send({ embeds: [welcomeEmbed] });

        await interaction.followUp({
          content: `โ ุชู ุฅูุดุงุก ููุงุฉ ุงูุณุฌูุงุช: ${logChannel}`,
          ephemeral: true,
        });
      } catch (error) {
        console.error("ุฎุทุฃ ูู ุฅูุดุงุก ููุงุฉ ุงูููุฌุงุช:", error);
      }
    }
  },
};
